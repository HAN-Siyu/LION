% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Modelling.R
\name{randomForest_CV}
\alias{randomForest_CV}
\title{Evaluation of Random Forest Classifier with K-Fold Cross Validation}
\usage{
randomForest_CV(
  datasets = list(),
  label.col = 1,
  positive.class = NULL,
  folds.num = 10,
  ntree = 1500,
  seed = 1,
  parallel.cores = 2,
  ...
)
}
\arguments{
\item{datasets}{a list containing one or several input datasets. See examples.}

\item{label.col}{an integer. Column number of the label.}

\item{positive.class}{\code{NULL} or string. Which class is the positive class? Should be one
of the classes in label column. The first class in label column will be selected
as the positive class if leave \code{positive.class = NULL}.}

\item{folds.num}{an integer. Number of folds. Default \code{10} for 10-fold cross validation.}

\item{ntree}{parameter for random forest. Default: 1500. See \code{\link[randomForest]{randomForest}}.}

\item{seed}{random seed for data splitting. Integer.}

\item{parallel.cores}{an integer specifying the number of cores for parallel computation. Default: \code{2}.
Set \code{parallel.cores = -1} to run with all the cores. \code{parallel.cores} should be == -1 or >= 1.}

\item{...}{other parameters passed to \code{\link[randomForest]{randomForest}} function.}
}
\value{
This function return the performance of \emph{k}-fold CV.
}
\description{
Evaluation of Random Forest Classifier with K-Fold Cross Validation
}
\examples{

# Following codes only show how to use this function
# and cannot reflect the genuine performance of tools or classifiers.

data(demoPositiveSeq)
data(demoNegativeSeq)

dataPositive <- featureFreq(seqRNA = demoPositiveSeq$RNA.positive,
                            seqPro = demoPositiveSeq$Pro.positive,
                            label = "Interact", featureMode = "conc",
                            computePro = "DeNovo", k.Pro = 3, k.RNA = 2,
                            normalize = "none", parallel.cores = 2)

dataNegative <- featureFreq(seqRNA = demoNegativeSeq$RNA.negative,
                            seqPro = demoNegativeSeq$Pro.negative,
                            label = "Non.Interact", featureMode = "conc",
                            computePro = "DeNovo", k.Pro = 3, k.RNA = 2,
                            normalize = "none", parallel.cores = 2)

dataset <- rbind(dataPositive, dataNegative)

Perf_CV <- randomForest_CV(datasets = list(dataset), label.col = 1, ntree = 100,
                           parallel.cores = 2, mtry = 20)

# if you have more than one input dataset,
# use "datasets = list(dataset1, dataset2, dataset3)".

}
\seealso{
\code{\link{randomForest_RFE}}, \code{\link{randomForest_tune}}, \code{\link[randomForest]{randomForest}}
}
